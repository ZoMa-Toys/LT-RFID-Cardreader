# This is a basic workflow to help you get started with Actions

name: Test and Deploy to ESP

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      matrixparam:
        required: true
        type: string
      pioenv:
        required: false
        type: string
    secrets:
      STASSID: 
        required: true
      STAPSK: 
        required: true
      WSHOST: 
        required: true
      WSPORT: 
        required: true
      WSPATH: 
        required: true
      SSH_PRIVATE_KEY:
        required: true
      HOST:
        required: true
      USER:
        required: true



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: PlatformIO Run
      uses: karniv00l/platformio-run-action@0.1.0
      with:
        environments: ${{inputs.pioenv}}
      env:
        TRAINNAME: '\"TEST\"'
        THISMDNS: '\"test\"'
        STASSID: '\"${{secrets.STASSID}}\"'
        STAPSK: '\"${{secrets.STAPSK}}\"'
        WSHOST: '\"${{secrets.WSHOST}}\"'
        WSPORT: '${{secrets.WSPORT}}'
        WSPATH: '\"${{secrets.WSPATH}}\"'
  creatematrix:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [build]
    outputs:
      hostmatrix: ${{ steps.set-matrix.outputs.cmd_output }}
    steps:
      - name: Create matrix for next job
        uses: ZoMa-Toys/zoma-ssh@1.0
        id: set-matrix
        with:
          host: ${{secrets.HOST}}
          user: ${{secrets.USER}}
          key: ${{secrets.SSH_PRIVATE_KEY}}
          cmd: "~/makeMatrix.py ${{inputs.matrixparam}}"
  buildandupload:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.creatematrix.outputs.hostmatrix).include[0] && always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [creatematrix]
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
          ${{fromJson(needs.creatematrix.outputs.hostmatrix)}}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Deploy to all available ESP8266s
        uses: ZoMa-Toys/zoma-ssh@1.0
        id: set-matrix
        with:
          host: ${{secrets.HOST}}
          user: ${{secrets.USER}}
          key: ${{secrets.SSH_PRIVATE_KEY}}
          cmd: "rm -rf buildRepo && git clone --recursive ${{github.event.repository.ssh_url}} buildRepo && cd buildRepo && export STASSID='\\\"${{secrets.STASSID}}\\\"' && export STAPSK='\\\"${{secrets.STAPSK}}\\\"' && export WSHOST='\\\"${{secrets.WSHOST}}\\\"' && export WSPATH='\\\"${{secrets.WSPATH}}\\\"' && export WSPORT='${{secrets.WSPORT}}' && export TRAINNAME='\\\"${{ matrix.train }}\\\"' && export THISMDNS='\\\"${{ matrix.localDNS }}\\\"' && ~/.platformio/penv/bin/pio run  --target upload --upload-port ${{ matrix.host }} -e ${{inputs.pioenv}} && cd .. && rm -rf buildRepo"
